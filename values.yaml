# override name
nameOverride:

# replication count for web server, scheduledWorker, adhocWorker and scheduler
replicaCount: 1

# redash docker image
image:
  repository:  redash/redash
  tag: 6.0.0.b8537
  pullPolicy: IfNotPresent

# redash service
service:
  type: ClusterIP

# redash web server
web:
  workersCount: 4
  # resources:
  #   limits:
  #    cpu: 500m
  #    memory: 256Mi
  #   requests:
  #    cpu: 150m
  #    memory: 128Mi

# redash scheduled worker
scheduledWorker:
  workersCount: 1
  queues: "scheduled_queries,schemas"
  # resources:
  #   limits:
  #    cpu: 500m
  #    memory: 256Mi
  #   requests:
  #    cpu: 150m
  #    memory: 128Mi

# redash adhoc worker
adhocWorker:
  workersCount: 2
  queues: "queries"
  # resources:
  #   limits:
  #    cpu: 500m
  #    memory: 256Mi
  #   requests:
  #    cpu: 150m
  #    memory: 128Mi

# redash scheduler
scheduler:
  workersCount: 1
  queues: "celery"
  # resources:
  #   limits:
  #    cpu: 500m
  #    memory: 256Mi
  #   requests:
  #    cpu: 150m
  #    memory: 128Mi

# mail server config
mail:
  server:
  port: 25
  useTls: false
  useSSL: false
  username:
  password:
  defaultSender:
  maxEmails:
  asciiAttachments: false

# redash name
redashName: Redash

# assets path
redashStaticAssetsPath: ../client/dist/

# random token
redashCookieSecret: "EozNqTAI3VAHj7y4O2TffPXy9VEI7P7"

redashEnforceHTTPs: false

redashJobExpiryTime: 300

redashFeatureShowPermissionsControl: false

redashAdhocQueryTimeLimit: 300

logLevel: DEBUG

# extra environment variable
# https://redash.io/help/open-source/admin-guide/env-vars-settings
extraEnvironment: {}

# google auth
googleOAuth:
  enabled: false
  redashGoogleClientId:
  redashGoogleClientSecret:
  redashPasswordLoginEnabled: true

# database
# Notes: create the database before deployment
# from `postgresql` or `externalPostgres` only one should be enabled.
# `postgresql` use helm dependency for postgres db
postgresql:
  enabled: true
  postgresqlUsername: postgres
  postgresqlPassword: postgres
  postgresqlDatabase: redash-postgres
  persistence:
    enabled: false

# `externalPostgres` use external postgres db
# RDS, static node, etc.
externalPostgres:
  enabled: false
  postgresqlHost:
  postgresqlPort:
  postgresqlUsername:
  postgresqlPassword:
  postgresqlDatabase:

# database table creation task(create_db)
# true for create tables(init deployment) or false
# https://github.com/getredash/redash/blob/master/bin/docker-entrypoint
createDB: true

# migrate database script when upgrade redash version
# fasle for first deployment
# https://redash.io/help/open-source/admin-guide/how-to-upgrade
# python manage.py db upgrade
upgradeDB: false

# Redis host
# Notes: make redis available before deployment
# not for production
redis:
  enabled: true
  usePassword: false

# `externalRedis` use external redis host
# Elasticache, etc.
externalRedis:
  enabled: false
  RedisHost:
  RedisPort:
  RedisPassword:
  RedisDb:

nodeSelector: {}

tolerations: []

affinity: {}

# ingress
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  labels: {}
  path: /
  hosts: []
  #  - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
